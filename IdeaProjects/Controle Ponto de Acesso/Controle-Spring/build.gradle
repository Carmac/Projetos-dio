plugins {
	id 'org.springframework.boot' version '2.4.10'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('azureVersion', "3.5.0")
	set('springCloudGcpVersion', "2.0.4")
	set('springCloudVersion', "2020.0.3")
	set('wavefrontVersion', "2.1.1")
}

dependencies {
	implementation "org.hibernate:hibernate-core:5.5.7.Final"
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation 'com.h2database:h2:1.4.200'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-batch:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-integration:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:2.5.4'
	implementation 'com.azure.spring:azure-spring-boot-starter:3.8.0'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-pubsub:2.0.4'
	implementation 'com.wavefront:wavefront-spring-boot-starter:2.2.0'
	implementation 'org.springframework.cloud:spring-cloud-cloudfoundry-discovery:3.0.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:2.0.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-config:3.0.4'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway:3.0.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer:3.0.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.0.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-open-service-broker:3.3.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.0.3'
	implementation 'org.springframework.cloud:spring-cloud-stream:3.1.3'
	implementation 'org.springframework.integration:spring-integration-jpa:5.5.3'
	implementation 'org.springframework.integration:spring-integration-security:5.5.3'
	implementation 'org.springframework.integration:spring-integration-webflux:5.5.3'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    implementation 'com.github.docker-java:docker-java:3.2.11'
	implementation 'com.palantir.gradle.docker:gradle-docker:0.28.0'
    implementation 'net.sf.appinfo:appinfo:0.5.2'
	implementation 'io.ipinfo:ipinfo-api:2.0'
    implementation 'io.ipinfo:ipinfo-spring:0.1.0'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.5.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
	testImplementation 'io.projectreactor:reactor-test:3.4.9'
	testImplementation 'org.springframework.batch:spring-batch-test:4.3.3'
	testImplementation 'org.springframework.integration:spring-integration-test:5.5.3'
	testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient:2.0.5.RELEASE'
	testImplementation 'org.springframework.security:spring-security-test:5.5.1'
	implementation 'org.springframework.boot:spring-boot-starter:2.5.4'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:2.5.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'

	runtimeOnly 'mysql:mysql-connector-java:8.0.25'
}

dependencyManagement {
	imports {
		mavenBom "com.wavefront:wavefront-spring-boot-bom:${wavefrontVersion}"
		mavenBom "com.azure.spring:azure-spring-boot-bom:${azureVersion}"
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
